plugins {
    id 'war'
    id "org.sonarqube" version "2.6.2"
}

apply plugin: 'jacoco'

group 'com.epam.meme'
version '1.0'

ext {
    corsFilterVersin = '2.6'
    jerseyVersion = '2.27'
    junitVersion = '4.12'
    lombokVersion = '1.18.2'
    mockitoVersion = '1.10.19'
    springVersion = '5.0.4.RELEASE'
    springDataJpaVersion = '2.0.9.RELEASE'
    swaggerVersion = '1.5.0'
    beanValidationVersion = '2.0.1.Final'
    log4j2Version = '2.11.1'
    persistenceVersion = '2.2.1'
    eclipsePersistenceVersion = '2.7.3'
    commonJdbcVersion = '1.4'
    servletApiVersion = '3.1.0'
    javaxElVersion = '3.0.0'
    glassfishElVersion = '2.2.6'
    h2Version = '1.4.187'
    postgreVersion = '9.3-1100-jdbc41'
    modelMapperVersion = '2.2.0'
    slf4jVersion = '1.7.25'
    swaggerJerseyVersion = '1.5.20'
    selenideVersion = '3.5'
    cucumberJava8Version = '1.2.5'
    cucumberJunitVersion = '1.2.4'
}

repositories {
    mavenCentral()
}

dependencies {
    compile "com.thetransactioncompany:cors-filter:${corsFilterVersin}"

    compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4j2Version}"
    compile "org.apache.logging.log4j:log4j-api:${log4j2Version}"
    compile "org.apache.logging.log4j:log4j-core:${log4j2Version}"

    compile "io.swagger:swagger-jersey2-jaxrs:${swaggerVersion}"

    compile "org.glassfish.jersey.containers:jersey-container-servlet-core:${jerseyVersion}"
    compile("org.glassfish.jersey.ext:jersey-spring4:${jerseyVersion}") {
        exclude group: 'org.springframework', module: 'spring-core'
        exclude group: 'org.springframework', module: 'spring-web'
        exclude group: 'org.springframework', module: 'spring-beans'
    }

    compile "org.glassfish.jersey.media:jersey-media-json-binding:${jerseyVersion}"

    compile "commons-dbcp:commons-dbcp:${commonJdbcVersion}"

    compile "org.projectlombok:lombok:${lombokVersion}"
    compile "org.eclipse.persistence:org.eclipse.persistence.jpa:${eclipsePersistenceVersion}"

    compile "javax.servlet:javax.servlet-api:${servletApiVersion}"

    compile "org.springframework:spring-context-support:${springVersion}"
    compile "org.springframework:spring-core:${springVersion}"
    compile "org.springframework:spring-tx:${springVersion}"
    compile "org.springframework:spring-web:${springVersion}"
    compile "org.springframework.data:spring-data-jpa:${springDataJpaVersion}"

    compile "org.postgresql:postgresql:${postgreVersion}"

    compile "javax.validation:validation-api:${beanValidationVersion}"

    compile "org.glassfish.jersey.ext:jersey-bean-validation:${jerseyVersion}"

    compile "javax.el:javax.el-api:${javaxElVersion}"
    compile "org.glassfish.web:javax.el:${glassfishElVersion}"

    compile "org.modelmapper:modelmapper:${modelMapperVersion}"

    compile "io.swagger:swagger-jersey2-jaxrs:${swaggerJerseyVersion}"

    testCompile "com.h2database:h2:${h2Version}"
    testCompile "org.springframework:spring-test:${springVersion}"
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "junit:junit:${junitVersion}"

    testCompile "com.codeborne:selenide:${selenideVersion}"
    testCompile "info.cukes:cucumber-java8:${cucumberJava8Version}"
    testCompile "info.cukes:cucumber-spring:${cucumberJava8Version}"
    testCompile "info.cukes:cucumber-junit:${cucumberJunitVersion}"

    task buildUi(type: Exec) {
        commandLine './buildUI.bat'
    }

    task UIEdit(type: Exec) {
        dependsOn(buildUi)
        commandLine './frontend/UIEditor.bat'
    }

    task buildStaticUiToWebapp(type: Copy) {
        description 'moves compiled react files in webapp '
        dependsOn(UIEdit)

        from 'frontend/build'
        into 'src/main/webapp/resources'
        include 'static/css/*.*', 'static/js/*.*'
    }

    task buildIndexUiToWebapp(type: Copy) {
        description 'moves compiled react files in webapp '
        dependsOn(UIEdit)

        from 'frontend/build'
        into 'src/main/webapp/'
        include 'index.html'
    }

    war {
        dependsOn(buildStaticUiToWebapp)
        dependsOn(buildIndexUiToWebapp)
    }
}
